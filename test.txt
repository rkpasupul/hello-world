CREATE TABLE customer (
    id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    phone VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE address (
    id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT NOT NULL,
    address_line_1 VARCHAR(255) NOT NULL,
    address_line_2 VARCHAR(255),
    city VARCHAR(100) NOT NULL,
    state VARCHAR(100) NOT NULL,
    country VARCHAR(100) NOT NULL,
    postal_code VARCHAR(20) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES customer(id)
);

#mysql db schema for customer orders with oderLines and related tables with foreign key constraint


CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES customer(id)
);


CREATE TABLE order_line (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10, 2),
    FOREIGN KEY (order_id) REFERENCES orders(id),
    FOREIGN KEY (product_id) REFERENCES product(id)
);


CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    description TEXT,
    price DECIMAL(10, 2)
);

#mysql db schema for company inventory table and  WHERE_house table and related tables with foreign key constraint


CREATE TABLE company (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    address VARCHAR(255),
    contact_number VARCHAR(20)
);


CREATE TABLE store_or_warehouse (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255),
    address VARCHAR(255)
);


CREATE TABLE inventory (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT,
    company_id INT,
    store_or_warehouse_id INT,
    quantity INT,
    price DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES product(id),
    FOREIGN KEY (company_id) REFERENCES company(id),
    FOREIGN KEY (store_or_warehouse_id) REFERENCES house(id)
);

#mysql db schema for Restore table and  Restore_line table and related tables with foreign key constraint



CREATE TABLE restock_order (
    id INT PRIMARY KEY AUTO_INCREMENT,
    store_or_warehouse_id INT,
    order_date DATE,
    FOREIGN KEY (store_or_warehouse_id) REFERENCES store_or_warehouse(id)
);


CREATE TABLE restock_lines (
    id INT PRIMARY KEY AUTO_INCREMENT,
    restock_order_id INT,
    product_id INT,
    quantity INT,
    FOREIGN KEY (restock_order_id) REFERENCES restock_order(id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

#mysql db schema for Shipment table and  Delivery table with foreign key constraint

CREATE TABLE shipment (
    shipment_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT,
    delivery_id INT,
    shipment_date DATE,
    -- Add other columns as needed
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (delivery_id) REFERENCES delivery(delivery_id)
);

CREATE TABLE delivery (
    delivery_id INT PRIMARY KEY AUTO_INCREMENT,
    delivery_date DATE,
    -- Add other columns as needed
);

#mysql db schema for Invoice and Invoice_line table with foreign key constraint

CREATE TABLE invoice (
    invoice_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    invoice_date DATE,
    -- Add other columns as needed
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE invoice_line (
    invoice_line_id INT PRIMARY KEY AUTO_INCREMENT,
    invoice_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10, 2),
    -- Add other columns as needed
    FOREIGN KEY (invoice_id) REFERENCES invoice(invoice_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);
 

CREATE TABLE invoice_line (
    invoice_line_id INT PRIMARY KEY AUTO_INCREMENT,
    invoice_id INT,
    product_id INT,
    quantity INT,
    price DECIMAL(10, 2),
    -- Add other columns as needed
    FOREIGN KEY (invoice_id) REFERENCES invoice(invoice_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);


